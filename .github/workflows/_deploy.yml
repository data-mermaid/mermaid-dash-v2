name: Reusable Deploy

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      domain:
        required: true
        type: string
      vite_react_app_auth0_domain:
        required: true
        type: string
      vite_react_app_auth0_client_id:
        required: true
        type: string
      vite_react_app_auth0_audience:
        required: true
        type: string
      vite_react_app_mermaid_dashboard_link:
        required: true
        type: string
      vite_react_app_mermaid_api_endcpoint:
        required: true
        type: string

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-node@v4.2.0
        with:
          node-version-file: '.nvmrc'

      - uses: actions/cache@v4.2.2
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}

      - if: ${{ steps.yarn-cache.outputs.cache-hit != 'true' }}
        name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn run build
        env:
          VITE_REACT_APP_AUTH0_DOMAIN: ${{ inputs.vite_react_app_auth0_domain }}
          VITE_REACT_APP_AUTH0_CLIENT_ID: ${{ inputs.vite_react_app_auth0_client_id }}
          VITE_REACT_APP_AUTH0_AUDIENCE: ${{ inputs.vite_react_app_auth0_audience }}
          VITE_REACT_APP_MERMAID_DASHBOARD_LINK: ${{ inputs.vite_react_app_mermaid_dashboard_link }}
          VITE_REACT_APP_MERMAID_API_ENDPOINT: ${{ inputs.vite_react_app_mermaid_api_endcpoint }}

      - name: Install IaC dependancies
        working-directory: iac
        run: npm ci && npm install -g aws-cdk

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.1.0
        env:
          CDK_DEFAULT_ACCOUNT: ${{ secrets.CDK_DEFAULT_ACCOUNT }}
          CDK_DEPLOY_ROLE: ${{ secrets.CDK_DEPLOY_ROLE }}
        with:
          role-to-assume: arn:aws:iam::${{ secrets.CDK_DEFAULT_ACCOUNT }}:role/${{ secrets.CDK_DEPLOY_ROLE }}
          aws-region: us-east-1
          role-skip-session-tagging: true

      - name: Deploy
        run: |
          echo "Deploying to ${{ inputs.environment }} with domain ${{ inputs.domain }}" && \
          cd iac && cdk deploy --require-approval never
        env:
          CDK_DEPLOY_ROLE: ${{ secrets.CDK_DEPLOY_ROLE }}
          AWS_REGION: ${{ secrets.CDK_DEFAULT_REGION }}
          CDK_DEFAULT_REGION: ${{ secrets.CDK_DEFAULT_REGION }}
          CDK_DEFAULT_ACCOUNT: ${{ secrets.CDK_DEFAULT_ACCOUNT }}
          GITHUB_TOKEN: ${{ github.token }}
          ENV: ${{ inputs.environment }}
          DOMAIN: ${{ inputs.domain }}

